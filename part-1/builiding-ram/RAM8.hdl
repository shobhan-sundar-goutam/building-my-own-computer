// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    /*
    Using the selection capability of DMux to choose which channel 
    the load bit goes into.
    Load bit can be 0 or 1 but it is not important in this case. 
    The selection power is very important in this case.
    */
    DMux8Way(in= load, sel= address, a= l1, b= l2, c= l3, d= l4, e= l5, f= l6, g= l7, h= l8);
    Register(in= in, load= l1, out= o1);
    Register(in= in, load= l2, out= o2);
    Register(in= in, load= l3, out= o3);
    Register(in= in, load= l4, out= o4);
    Register(in= in, load= l5, out= o5);
    Register(in= in, load= l6, out= o6);
    Register(in= in, load= l7, out= o7);
    Register(in= in, load= l8, out= o8);
    // Assembling the output of 8 registers into one using Mux8Way16
    Mux8Way16(a= o1, b= o2, c= o3, d= o4, e= o5, f= o6, g= o7, h= o8, sel= address, out= out);
}